<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">

    
         <context:annotation-config/><!-- este pone joeday  no lo se sin esto tambien funcionan las anotaciones respuesta(he encontrado para que sirve esta anotacion    De forma predeterminada, 
         Spring no tiene conocimiento de la anotación @PostConstruct y @PreDestroy.
		Para habilitarlo, debe registrar 'CommonAnnotationBeanPostProcessor' (<bean class="org.springframework.context.annotation.CommonAnnotationBeanPostProcessor" />)o especificar 
		el '<context: annotation-config />' en el archivo de configuración del bean, )-->
 <mvc:resources mapping="/Internal Resources/**" location="/Internal Resources" />
  <mvc:annotation-driven />
   <mvc:default-servlet-handler/> <!-- esta etiqueta lo he puesto pero creo no es necesario -->
    <context:component-scan base-package="org.okis" />	
 
 
    <bean id="jspViewResolver"
        class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass"
            value="org.springframework.web.servlet.view.JstlView" />
        <property name="prefix" value="/WEB-INF/view/" />
        <property name="suffix" value=".jsp" />
    </bean>
    
       <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"></bean>

</beans>
